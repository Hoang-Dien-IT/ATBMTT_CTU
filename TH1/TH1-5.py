import math

def mod_inverse(a, m):  # H√†m t√¨m ngh·ªãch ƒë·∫£o c·ªßa a modulo m
    for i in range(1, m):
        if (a * i) % m == 1:
            return i
    return None


def Char2Num(c):  # H√†m chuy·ªÉn k√Ω t·ª± th√†nh s·ªë
    if c.isupper():  # Ch·ªØ hoa (A-Z)
        return ord(c) - 65  # 0-25
    elif c.islower():  # Ch·ªØ th∆∞·ªùng (a-z)
        return ord(c) - 97 + 26  # 26-51
    elif c == ' ':  # Kho·∫£ng tr·∫Øng
        return 52  # 52
    elif c.isdigit():  # S·ªë (0-9)
        return ord(c) - 48 + 53  # 53-62
    else:
        raise ValueError("K√Ω t·ª± kh√¥ng h·ª£p l·ªá!")


def Num2Char(n):  # H√†m chuy·ªÉn s·ªë th√†nh k√Ω t·ª±
    if n < 26:
        return chr(n + 65)  # A-Z
    elif n >= 26 and n < 52:
        return chr(n + 97 - 26)  # a-z
    elif n == 52:
        return ' '  # kho·∫£ng tr·∫Øng
    elif n <= 62 and n >= 53:
        return chr(n + 48 - 53)  # 0-9
    else:
        raise ValueError("Gi√° tr·ªã kh√¥ng h·ª£p l·ªá!")


def decrypt_affine(ciphertext, a, b):  # H√†m gi·∫£i m√£ Affine
    m = 62  # K√≠ch th∆∞·ªõc b·∫£ng ch·ªØ c√°i g·ªìm A-Z, a-z, 0-9 v√† kho·∫£ng tr·∫Øng
    a_inv = mod_inverse(a, m)
    if a_inv is None:
        return None

    decrypted_text = ""
    for c in ciphertext:
        p = (a_inv * (Char2Num(c) - b)) % m
        decrypted_text += Num2Char(p)

    return decrypted_text


# Danh s√°ch c√°c gi√° tr·ªã a h·ª£p l·ªá
valid_a_values = {1, 3, 5, 7, 9, 11, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55,
                  57, 59, 61}

# Ciphertext ƒë√£ cho
cipher_text = "gAdX5d6IXpvBX3XawdSLHIXIAdXCTITwdXL6XIPXHwdvIdXLI"

# T√¨m ra c·∫∑p kh√≥a (a, b) ph√π h·ª£p v√† th√¥ng ƒëi·ªáp
for a in valid_a_values:
    for b in range(62):  # b trong ph·∫°m vi 0 ƒë·∫øn 61
        decrypted = decrypt_affine(cipher_text, a, b)
        if decrypted and "predict" in decrypted.lower():  # Ki·ªÉm tra n·∫øu c√≥ t·ª´ "predict" trong th√¥ng ƒëi·ªáp
            print(f"üîπ T√¨m th·∫•y kh√≥a! (a={a}, b={b})")
            print(f"Th√¥ng ƒëi·ªáp: {decrypted}")
            exit()